/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package ui;

import Parser.Parser;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.Doctor;
import model.DoctorDirectory;
import model.Hospital;
import model.HospitalDirectory;
import model.House;
import model.NewSystem;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author meetdoshi
 */

public class CommunityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityJPanel
     */
    
    String[] communityList;
    PatientDirectory patientDirectory;
    Hospital newHospital;
    City city;
    HospitalDirectory hospitalDirectory;
    NewSystem newSystem;
    DefaultTableModel hospitalTableModel;
    DefaultTableModel houseTableModel;
    DefaultTableModel manageDoctorModel;
    DefaultTableModel managePersonModel;
    Hospital hospital;
    PersonDirectory personDirectory;
    Hospital selectedHospital;
    Person selectedPerson;
    DoctorDirectory doctorDirectory;
    Community community;
    House house;
    boolean communityAdminLoggedIn;
    String selectedCommunity;
    Parser parser = new Parser();
    ArrayList<Integer> hospNumbers;
    
    public CommunityJPanel() {
        initComponents();
    }
    
    public CommunityJPanel(City city, String[] communityList, PatientDirectory patientDirectory, HospitalDirectory hospitalDirectory, PersonDirectory personDirectory, DoctorDirectory doctorDirectory) {
        initComponents();
        this.communityList = communityList;
        this.city = city;
        this.patientDirectory = patientDirectory;
        this.hospitalDirectory = hospitalDirectory;
        this.doctorDirectory = doctorDirectory;
        this.personDirectory = personDirectory;
        
        comunityAdminLoginPanel.setVisible(true);
        
        ArrayList<Integer> hospNumbers = new ArrayList<Integer>();
        for(Community c: city.getCommunityList()){
            for(Hospital h: c.getHospitalList()){
                hospNumbers.add(h.getHospitalNumber());
            }
        }
        hospitalNumbers.removeAllItems();
        for(int s: hospNumbers){
            hospitalNumbers.addItem(String.valueOf(s));
        }
        communityDropbox.removeAllItems();
        for(Community c: city.getCommunityList()){
            communityDropbox.addItem(c.getCommunityName());
        }
        selectedCommunity = String.valueOf(communityDropbox.getSelectedItem());
        manageDoctorModel = (DefaultTableModel) manageDoctorTable.getModel();
        managePersonModel = (DefaultTableModel) managePersonTable.getModel();
        hospitalTableModel = (DefaultTableModel) hospitalTable.getModel();
        houseTableModel = (DefaultTableModel) houseTable.getModel();
        populateManageTable();
        populateHospitalTable();
        populateHouseTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comunityAdminLoginPanel = new javax.swing.JPanel();
        communityAdminIDText = new javax.swing.JLabel();
        communityAdminIDField = new javax.swing.JTextField();
        communityAdminPasswordText = new javax.swing.JLabel();
        communityAdminPasswordField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        communityAdminPanel = new javax.swing.JPanel();
        communityDropbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        createHospitalButton = new javax.swing.JButton();
        hospitalUpdateFilterBox = new javax.swing.JComboBox<>();
        hospitalUpdateFieldText = new javax.swing.JTextField();
        updateHospital = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        houseTable = new javax.swing.JTable();
        createHouseButton = new javax.swing.JButton();
        houseUpdateFilterBox = new javax.swing.JComboBox<>();
        houseUpdateFieldText = new javax.swing.JTextField();
        updateHouse = new javax.swing.JButton();
        manageDoctor = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        manageDoctorPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        manageDoctorTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        managePersonTable = new javax.swing.JTable();
        assignDoctor = new javax.swing.JButton();
        hospitalNumbers = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        createNewHospitalPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        createHospitalTable = new javax.swing.JTable();
        hospitalBackButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        hospitalNumberInput = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        hospitalStreetNameInput = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        hospitalCommunityInput = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        hospitalCityInput = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        hospitalZIPCodeInput = new javax.swing.JTextField();
        createHospital = new javax.swing.JButton();
        createNewHousePanel = new javax.swing.JPanel();
        houseBackButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        createHouseTable = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        houseNumberInput = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        houseStreetNameInput = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        houseCommunityInput = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        houseCityInput = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        houseZIPCodeInput = new javax.swing.JTextField();
        createHouse = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        houseUnitNumberInput = new javax.swing.JTextField();

        setLayout(new java.awt.CardLayout());

        comunityAdminLoginPanel.setBackground(new java.awt.Color(251, 227, 250));

        communityAdminIDText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        communityAdminIDText.setText("Community Admin ID:");

        communityAdminPasswordText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        communityAdminPasswordText.setText("Password:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout comunityAdminLoginPanelLayout = new javax.swing.GroupLayout(comunityAdminLoginPanel);
        comunityAdminLoginPanel.setLayout(comunityAdminLoginPanelLayout);
        comunityAdminLoginPanelLayout.setHorizontalGroup(
            comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(comunityAdminLoginPanelLayout.createSequentialGroup()
                    .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(comunityAdminLoginPanelLayout.createSequentialGroup()
                            .addGap(73, 73, 73)
                            .addComponent(communityAdminPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(comunityAdminLoginPanelLayout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(communityAdminIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                    .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(communityAdminIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(communityAdminPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(73, 73, 73)))
        );
        comunityAdminLoginPanelLayout.setVerticalGroup(
            comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(comunityAdminLoginPanelLayout.createSequentialGroup()
                    .addGap(206, 206, 206)
                    .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(communityAdminIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(communityAdminIDText))
                    .addGap(18, 18, 18)
                    .addGroup(comunityAdminLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(communityAdminPasswordText)
                        .addComponent(communityAdminPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(100, 100, 100)
                    .addComponent(loginButton)
                    .addContainerGap(207, Short.MAX_VALUE)))
        );

        add(comunityAdminLoginPanel, "card4");

        communityAdminPanel.setBackground(new java.awt.Color(251, 227, 250));

        communityDropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Communities:");

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "HospitalNumber", "StreetName", "ZIPCode", "Community", "City", "Doctors"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalTable);

        createHospitalButton.setText("Create New Hospital");
        createHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHospitalButtonActionPerformed(evt);
            }
        });

        hospitalUpdateFilterBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "streetName", "ZIPCode" }));

        updateHospital.setText("Update Details");
        updateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalActionPerformed(evt);
            }
        });

        houseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "HouseNumber", "HouseUnitNumber", "StreetName", "ZIPCode", "Community", "City", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(houseTable);

        createHouseButton.setText("Create New House");
        createHouseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHouseButtonActionPerformed(evt);
            }
        });

        houseUpdateFilterBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "streetName", "ZIPCode" }));

        updateHouse.setText("Update Details");
        updateHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHouseActionPerformed(evt);
            }
        });

        manageDoctor.setText("Manage Doctor");
        manageDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDoctorActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        logOutButton.setText("Logout");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout communityAdminPanelLayout = new javax.swing.GroupLayout(communityAdminPanel);
        communityAdminPanel.setLayout(communityAdminPanelLayout);
        communityAdminPanelLayout.setHorizontalGroup(
            communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communityAdminPanelLayout.createSequentialGroup()
                .addGap(230, 230, 230)
                .addComponent(manageDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(communityAdminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4)
                    .addGroup(communityAdminPanelLayout.createSequentialGroup()
                        .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(communityAdminPanelLayout.createSequentialGroup()
                                .addComponent(createHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(hospitalUpdateFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hospitalUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(updateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(logOutButton)
                                .addGroup(communityAdminPanelLayout.createSequentialGroup()
                                    .addComponent(createHouseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(12, 12, 12)
                                    .addComponent(houseUpdateFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(houseUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(updateHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, communityAdminPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(communityDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        communityAdminPanelLayout.setVerticalGroup(
            communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(communityAdminPanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communityDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(searchButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createHospitalButton)
                    .addComponent(hospitalUpdateFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hospitalUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateHospital))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(communityAdminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createHouseButton)
                    .addComponent(houseUpdateFilterBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(houseUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateHouse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(manageDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(logOutButton)
                .addContainerGap())
        );

        add(communityAdminPanel, "card2");

        manageDoctorPanel.setBackground(new java.awt.Color(251, 227, 250));

        manageDoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "DoctorID", "Name", "Age", "Community", "Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(manageDoctorTable);

        managePersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "BirthDate", "Community", "Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(managePersonTable);

        assignDoctor.setText("Assign Doctor");
        assignDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDoctorActionPerformed(evt);
            }
        });

        hospitalNumbers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout manageDoctorPanelLayout = new javax.swing.GroupLayout(manageDoctorPanel);
        manageDoctorPanel.setLayout(manageDoctorPanelLayout);
        manageDoctorPanelLayout.setHorizontalGroup(
            manageDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDoctorPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(manageDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(backButton)
                    .addGroup(manageDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(manageDoctorPanelLayout.createSequentialGroup()
                            .addComponent(assignDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(hospitalNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        manageDoctorPanelLayout.setVerticalGroup(
            manageDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDoctorPanelLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(manageDoctorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignDoctor)
                    .addComponent(hospitalNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );

        add(manageDoctorPanel, "card4");

        createNewHospitalPanel.setBackground(new java.awt.Color(251, 227, 250));

        createHospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "HospitalNumber", "StreetName", "ZIPCode", "Community", "City", "Doctors"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        createHospitalTable.setPreferredSize(new java.awt.Dimension(580, 80));
        jScrollPane5.setViewportView(createHospitalTable);

        hospitalBackButton.setText("Back");
        hospitalBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalBackButtonActionPerformed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Hospital Number:");

        hospitalNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNumberInputActionPerformed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Street Name:");

        hospitalStreetNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalStreetNameInputActionPerformed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Community:");

        hospitalCommunityInput.setEditable(false);
        hospitalCommunityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalCommunityInputActionPerformed(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("City:");

        hospitalCityInput.setEditable(false);
        hospitalCityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalCityInputActionPerformed(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel15.setText("Zipcode:");

        hospitalZIPCodeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalZIPCodeInputActionPerformed(evt);
            }
        });

        createHospital.setText("Create");
        createHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHospitalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createNewHospitalPanelLayout = new javax.swing.GroupLayout(createNewHospitalPanel);
        createNewHospitalPanel.setLayout(createNewHospitalPanelLayout);
        createNewHospitalPanelLayout.setHorizontalGroup(
            createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                            .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(hospitalBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hospitalNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalZIPCodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        createNewHospitalPanelLayout.setVerticalGroup(
            createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewHospitalPanelLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(hospitalNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(hospitalStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(hospitalZIPCodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(hospitalCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHospitalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(hospitalCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(createHospital)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(hospitalBackButton)
                .addContainerGap())
        );

        add(createNewHospitalPanel, "card3");

        createNewHousePanel.setBackground(new java.awt.Color(251, 227, 250));

        houseBackButton.setText("Back");
        houseBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseBackButtonActionPerformed(evt);
            }
        });

        createHouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "HouseNumber", "HouseUnitNumber", "StreetName", "ZIPCode", "Community", "City", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(createHouseTable);

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("House Number:");

        houseNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseNumberInputActionPerformed(evt);
            }
        });

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel20.setText("Street Name:");

        houseStreetNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseStreetNameInputActionPerformed(evt);
            }
        });

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel21.setText("Community:");

        houseCommunityInput.setEditable(false);
        houseCommunityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseCommunityInputActionPerformed(evt);
            }
        });

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("City:");

        houseCityInput.setEditable(false);
        houseCityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseCityInputActionPerformed(evt);
            }
        });

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel23.setText("Zipcode:");

        houseZIPCodeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseZIPCodeInputActionPerformed(evt);
            }
        });

        createHouse.setText("Create");
        createHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHouseActionPerformed(evt);
            }
        });

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("House Unit Number:");

        houseUnitNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseUnitNumberInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createNewHousePanelLayout = new javax.swing.GroupLayout(createNewHousePanel);
        createNewHousePanel.setLayout(createNewHousePanelLayout);
        createNewHousePanelLayout.setHorizontalGroup(
            createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createNewHousePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createNewHousePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(houseBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(createNewHousePanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(createHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createNewHousePanelLayout.createSequentialGroup()
                        .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(houseNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseZIPCodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(houseUnitNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        createNewHousePanelLayout.setVerticalGroup(
            createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createNewHousePanelLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(houseNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(houseUnitNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(houseStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(houseZIPCodeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(houseCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createNewHousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(houseCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(createHouse)
                .addGap(40, 40, 40)
                .addComponent(houseBackButton)
                .addContainerGap())
        );

        add(createNewHousePanel, "card4");
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        if(parser.isLong(communityAdminIDField.getText()) && !parser.checkNull(communityAdminIDField.getText())){
            long communityAdminIDCred = Long.parseLong(communityAdminIDField.getText());
            if(!parser.checkNull(communityAdminPasswordField.getText())){
                String communityAdminPassCred = String.valueOf(communityAdminPasswordField.getText());
                long cAIC = Long.parseLong("1234");
                String cAPC = "CommunityAdmin1234";
                
                if(cAIC == communityAdminIDCred && (cAPC == null ? communityAdminPassCred == null : String.valueOf(cAPC).equals(communityAdminPassCred))){
                    communityAdminLoggedIn = true;
                }
                if(communityAdminLoggedIn){
                    comunityAdminLoginPanel.setVisible(false);
                    communityAdminPanel.setVisible(true);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Please Log In First");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Password should not be null");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Patient ID should be Long and not null");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void updateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalActionPerformed
        // TODO add your handling code here:

        if(hospitalTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "");
        }
        else{
            int hospitalID = (int)hospitalTableModel.getValueAt(hospitalTable.getSelectedRow(), 0);
            String houseInpUpdate = hospitalUpdateFieldText.getText().toString();
            for(Community c: city.getCommunityList()){
                for(Hospital h: c.getHospitalList()){
                    if(hospitalID == h.getHospitalNumber()){
                        hospital = h;
                    }
                }
            }
            String hospitalUpdateFilter = hospitalUpdateFilterBox.getSelectedItem().toString();
            if(hospitalUpdateFilter == " "){
                JOptionPane.showMessageDialog(this, "");
            }
            else{
                if(hospitalUpdateFilter == "streetName"){
                    String hospUpdate = houseInpUpdate;
                    hospital.setHospitalStreetName(hospUpdate);
                    populateHospitalTable();
                }
                if(hospitalUpdateFilter == "ZIPCode"){
                    int hospUpdate = Integer.parseInt(houseInpUpdate);
                    hospital.setHospitalZIPCode(hospUpdate);
                    populateHospitalTable();
                }
            }
        }
    }//GEN-LAST:event_updateHospitalActionPerformed

    private void updateHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHouseActionPerformed
        // TODO add your handling code here:
        
        if(houseTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "");
        }
        else{
            int houseID = (int)houseTableModel.getValueAt(houseTable.getSelectedRow(), 0);
            String houseInpUpdate = houseUpdateFieldText.getText().toString();
            for(Community c: city.getCommunityList()){
                for(House h: c.getHouseList()){
                    if(houseID == h.getHouseNumber()){
                        house = h;
                    }
                }
            }
            String houseUpdateFilter = houseUpdateFilterBox.getSelectedItem().toString();
            if(houseUpdateFilter == " "){
                JOptionPane.showMessageDialog(this, "");
            }
            else{
                if(houseUpdateFilter == "houseUnitNumber"){
                    int houseUpdate = Integer.parseInt(houseInpUpdate);
                    house.setHouseUnitNumber(houseUpdate);
                    populateHouseTable();
                }
                if(houseUpdateFilter == "streetName"){
                    String houseUpdate = houseInpUpdate;
                    house.setHouseStreetName(houseUpdate);
                    populateHouseTable();
                }
                if(houseUpdateFilter == "ZIPCode"){
                    int houseUpdate = Integer.parseInt(houseInpUpdate);
                    house.setHouseZIPCode(houseUpdate);
                    populateHouseTable();
                }
            }
        }
    }//GEN-LAST:event_updateHouseActionPerformed

    private void createHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHospitalButtonActionPerformed
        // TODO add your handling code here:
        communityAdminPanel.setVisible(false);
        createNewHospitalPanel.setVisible(true);
        populateHospitalTable();
    }//GEN-LAST:event_createHospitalButtonActionPerformed

    private void createHouseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHouseButtonActionPerformed
        // TODO add your handling code here:
        communityAdminPanel.setVisible(false);
        createNewHousePanel.setVisible(true);
        populateHouseTable();
    }//GEN-LAST:event_createHouseButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        selectedCommunity = String.valueOf(communityDropbox.getSelectedItem());
        for(Community c: city.getCommunityList()){
            if(selectedCommunity == c.getCommunityName())
            community = c;
        }
        populateHospitalTable();
        populateHouseTable();
        hospitalCommunityInput.setText(community.getCommunityName());
        houseCommunityInput.setText(community.getCommunityName());
        hospitalCityInput.setText(city.getCityName());
        houseCityInput.setText(city.getCityName());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void hospitalBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalBackButtonActionPerformed
        // TODO add your handling code here:
        createNewHospitalPanel.setVisible(false);
        communityAdminPanel.setVisible(true);
        populateHospitalTable();
        populateHouseTable();
    }//GEN-LAST:event_hospitalBackButtonActionPerformed

    private void houseBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseBackButtonActionPerformed
        // TODO add your handling code here:
        createNewHousePanel.setVisible(false);
        communityAdminPanel.setVisible(true);
        populateHospitalTable();
        populateHouseTable();
    }//GEN-LAST:event_houseBackButtonActionPerformed

    private void hospitalNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalNumberInputActionPerformed

    private void hospitalStreetNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalStreetNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalStreetNameInputActionPerformed

    private void hospitalCommunityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalCommunityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalCommunityInputActionPerformed

    private void hospitalCityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalCityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalCityInputActionPerformed

    private void hospitalZIPCodeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalZIPCodeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalZIPCodeInputActionPerformed

    private void createHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHospitalActionPerformed
        // TODO add your handling code here:
        boolean hospitalNumberCheck = false;
        int hospitalNumberCreate = Integer.parseInt(hospitalNumberInput.getText());
        for (Hospital h: community.getHospitalList()){
            if(h.getHospitalNumber() == hospitalNumberCreate){
                JOptionPane.showMessageDialog(this,"This Hospital Already Exist !!!");
                hospitalNumberCheck = true;
            }
        }
        if(!hospitalNumberCheck){
            String hospitalStreetNameCreate = hospitalStreetNameInput.getText();
            String hospitalCommunityCreate = hospitalCommunityInput.getText();
            String hospitalCityCreate = hospitalCityInput.getText();
            long hospitalZIPCodeCreate = Integer.parseInt(hospitalZIPCodeInput.getText());
            hospitalDirectory.createNewHospital(hospitalNumberCreate, hospitalStreetNameCreate, hospitalCommunityCreate, hospitalCityCreate);
            community.createNewHospital(hospitalNumberCreate, hospitalStreetNameCreate, hospitalCommunityCreate, hospitalCityCreate);
            populateHospitalTable();
            
            JOptionPane.showMessageDialog(this,"New Hospital is created with Hospital ID" + hospitalNumberCreate);
            
            hospitalNumberInput.setText("");
            hospitalStreetNameInput.setText("");
            hospitalZIPCodeInput.setText("");
            hospitalCommunityInput.setText("");
            hospitalCityInput.setText("");
        }
    }//GEN-LAST:event_createHospitalActionPerformed

    private void houseUnitNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseUnitNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseUnitNumberInputActionPerformed

    private void createHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHouseActionPerformed
        // TODO add your handling code here:
        boolean houseNumberCheck = false;
        int houseNumberCreate = Integer.parseInt(houseNumberInput.getText());
        for (House h: community.getHouseList()){
            if(h.getHouseNumber() == houseNumberCreate){
                JOptionPane.showMessageDialog(this,"This House Already Exist !!!");
                houseNumberCheck = true;
            }
        }
        if(!houseNumberCheck){
            int houseUnitNumberCreate = Integer.parseInt(houseUnitNumberInput.getText());
            String houseStreetNameCreate = houseStreetNameInput.getText();
            String houseCommunityCreate = houseCommunityInput.getText();
            String houseCityCreate = houseCityInput.getText();
            long houseZIPCodeCreate = Integer.parseInt(hospitalZIPCodeInput.getText());
            
            community.createNewHouse(houseNumberCreate, houseUnitNumberCreate, houseStreetNameCreate, houseCommunityCreate, houseCityCreate);
            populateHouseTable();
            
            JOptionPane.showMessageDialog(this,"");
            
            houseNumberInput.setText("");
            houseUnitNumberInput.setText("");
            houseStreetNameInput.setText("");
            hospitalZIPCodeInput.setText("");
            houseCommunityInput.setText("");
            houseCityInput.setText("");
        }
    }//GEN-LAST:event_createHouseActionPerformed

    private void houseZIPCodeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseZIPCodeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseZIPCodeInputActionPerformed

    private void houseCityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseCityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseCityInputActionPerformed

    private void houseCommunityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseCommunityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseCommunityInputActionPerformed

    private void houseStreetNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseStreetNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseStreetNameInputActionPerformed

    private void houseNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseNumberInputActionPerformed

    private void manageDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDoctorActionPerformed
        // TODO add your handling code here:
        communityAdminPanel.setVisible(false);
        manageDoctorPanel.setVisible(true);
        populateManageTable();
        hospitalNumbers.removeAllItems();
        for(Community c: city.getCommunityList()){
            for(Hospital h: c.getHospitalList()){
                hospNumbers.add(h.getHospitalNumber());
            }
        }
        for(int s: hospNumbers){
            hospitalNumbers.addItem(String.valueOf(s));
        }
    }//GEN-LAST:event_manageDoctorActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
        communityAdminPanel.setVisible(false);
        comunityAdminLoginPanel.setVisible(true);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void assignDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDoctorActionPerformed
        // TODO add your handling code here:

        if(managePersonTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Please select a person to add");
        }
        if(hospitalNumbers.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Please select a hospital to add doctor");
        }
        else{
            long personNumber = (long)managePersonModel.getValueAt(managePersonTable.getSelectedRow(),3);
            for(Person p : personDirectory.getPersonList()){
                if(personNumber == p.getPersonCellPhoneNumber()){
                    selectedPerson = p;
                }
            }
            for(Hospital h : hospitalDirectory.getHospitalList()){
                if(Integer.parseInt((String)hospitalNumbers.getSelectedItem()) == h.getHospitalNumber()){
                    selectedHospital = h;
                }
            }
            boolean doctorCheck = false;
            for(Patient p: patientDirectory.getPatientList()){
                if(p.matchByContact(selectedPerson.getPersonCellPhoneNumber())){
                    JOptionPane.showMessageDialog(this, "This Person is a Patient and cannot become Doctor");
                    doctorCheck = true;
                }
            }
            if(!doctorCheck){
                Doctor new_doc = selectedHospital.addDoctorToHospital(new Doctor(selectedPerson));
                doctorDirectory.addNewDoctor(new_doc);
                JOptionPane.showMessageDialog(this, "Added " + selectedPerson.getPersonName() + " to Hospital !!!");
                doctorCheck = false;
            }
        }
        populateManageTable();
    }//GEN-LAST:event_assignDoctorActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        manageDoctorPanel.setVisible(false);
        communityAdminPanel.setVisible(true);
        populateHospitalTable();
    }//GEN-LAST:event_backButtonActionPerformed

    public void populateHospitalTable(){
        hospitalTableModel.setRowCount(0);
        for(Community c: city.getCommunityList()){
            if(selectedCommunity == c.getCommunityName())
                community = c;
        }
        for(Hospital h: community.getHospitalList()){
            Object[] row = new Object[6];
            row[0] = h.getHospitalNumber();
            row[1] = h.getHospitalStreetName();
            row[2] = h.getHospitalZIPCode();
            row[3] = h.getHospitalCommunity();
            row[4] = h.getHospitalCity();
            row[5] = (h.getDoctorInHospital().size());
            hospitalTableModel.addRow(row);
        }
    }
    
    public void populateHouseTable(){
        houseTableModel.setRowCount(0);
        for(Community c: city.getCommunityList()){
            if(selectedCommunity == c.getCommunityName())
            community = c;
        }
        for(House h: community.getHouseList()){
            Object[] row = new Object[7];
            row[0] = h.getHouseNumber();
            row[1] = h.getHouseUnitNumber();
            row[2] = h.getHouseStreetName();
            row[3] = h.getHouseZIPCode();
            row[4] = h.getHouseCommunity();
            row[5] = h.getHouseCity();
            row[6] = (h.getHouseFamilyMembers().size());
            houseTableModel.addRow(row);
        }
    }
    
    public void populateManageTable(){
        manageDoctorModel.setRowCount(0);
        managePersonModel.setRowCount(0);
        long[] doctorCountNumber = new long[doctorDirectory.getDoctorList().size()];
        for(int i=0; i<(doctorDirectory.getDoctorList()).size(); i++){
            doctorCountNumber[i] = doctorDirectory.getDoctorList().get(i).getPerson().getPersonCellPhoneNumber();
        }
        for (Person p : personDirectory.getPersonList()) {
            boolean a = true;
            for(long i : doctorCountNumber){
                if(i == p.getPersonCellPhoneNumber()){
                    a = false;
                }
            }
            if(a == true){
                Object[] row = new Object[4];
                row[0] = p.getPersonName();
                row[1] = p.getPersonDOB();
                row[2] = p.getPersonCommunity();
                row[3] = p.getPersonCellPhoneNumber();
                managePersonModel.addRow(row);
                a = true;
            }
        }
        for(Doctor d: doctorDirectory.getDoctorList()){
            Object[] row = new Object[5];
            row[0] = d.getDoctorID();
            row[1] = d.getPerson().getPersonName();
            row[2] = d.getPerson().getPersonAge();
            row[3] = d.getPerson().getPersonCommunity();
            row[4] = d.getPerson().getPersonCellPhoneNumber();
            manageDoctorModel.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignDoctor;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField communityAdminIDField;
    private javax.swing.JLabel communityAdminIDText;
    private javax.swing.JPanel communityAdminPanel;
    private javax.swing.JTextField communityAdminPasswordField;
    private javax.swing.JLabel communityAdminPasswordText;
    private javax.swing.JComboBox<String> communityDropbox;
    private javax.swing.JPanel comunityAdminLoginPanel;
    private javax.swing.JButton createHospital;
    private javax.swing.JButton createHospitalButton;
    private javax.swing.JTable createHospitalTable;
    private javax.swing.JButton createHouse;
    private javax.swing.JButton createHouseButton;
    private javax.swing.JTable createHouseTable;
    private javax.swing.JPanel createNewHospitalPanel;
    private javax.swing.JPanel createNewHousePanel;
    private javax.swing.JButton hospitalBackButton;
    private javax.swing.JTextField hospitalCityInput;
    private javax.swing.JTextField hospitalCommunityInput;
    private javax.swing.JTextField hospitalNumberInput;
    private javax.swing.JComboBox<String> hospitalNumbers;
    private javax.swing.JTextField hospitalStreetNameInput;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JTextField hospitalUpdateFieldText;
    private javax.swing.JComboBox<String> hospitalUpdateFilterBox;
    private javax.swing.JTextField hospitalZIPCodeInput;
    private javax.swing.JButton houseBackButton;
    private javax.swing.JTextField houseCityInput;
    private javax.swing.JTextField houseCommunityInput;
    private javax.swing.JTextField houseNumberInput;
    private javax.swing.JTextField houseStreetNameInput;
    private javax.swing.JTable houseTable;
    private javax.swing.JTextField houseUnitNumberInput;
    private javax.swing.JTextField houseUpdateFieldText;
    private javax.swing.JComboBox<String> houseUpdateFilterBox;
    private javax.swing.JTextField houseZIPCodeInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton logOutButton;
    private javax.swing.JButton loginButton;
    private javax.swing.JButton manageDoctor;
    private javax.swing.JPanel manageDoctorPanel;
    private javax.swing.JTable manageDoctorTable;
    private javax.swing.JTable managePersonTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateHospital;
    private javax.swing.JButton updateHouse;
    // End of variables declaration//GEN-END:variables
}
